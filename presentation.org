#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+options: author:t broken-links:nil c:nil creator:nil
#+options: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:t
#+options: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+options: timestamp:t title:t toc:t todo:t |:t
#+title: GRSTAPS presentation
#+date: <2023-01-31 Tue>
#+author: John Phillips, Steve Willson
#+email: john@zeus
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 27.0.90 (Org mode 9.3)

#+startup: beamer
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [bigger]
#+OPTIONS: H:2

* GRSTAPs
** Introduction
GRSTAPs stands for Graphically Recursive Simultaneous Task Allocation,
Planning and Scheduling
*** screenshot                                              :B_ignoreheading:
    :PROPERTIES:
    :BEAMER_env: ignoreheading
    :BEAMER_col: 0.6
    :END:

   #+ATTR_LaTeX: :width 2in
   #+ATTR_LaTeX: :height 2in
   [[file:./fig1.jpeg]]

** Main points
*** Interleaving 
*** Task allocation method

** Abstract

*** Robot team coordination requires solving four problems at varying levels of abstraction
  - What - task planning
  - Who - task allocation
  - When - scheduling
  - How - motion planning
    
*** Use an interleaved planning approach
  - Incentivize compatibility among solutions generated at different levels

** Contributions
*** Agent-agnostic partially ordered planning
  - Determines tasks necessary to reach the goal state without committing any agents
  - Plans only include a set of tasks with ordering constraints

*** Search based approach
 - Iteratively assigns agents to tasks until the task requirements are satisfied
  
**** Two heuristic functions
  1. Incentivize allocations that satisfy task requirements
  2. Prefer a shorter makespan
    
** Application to TBAM
*** Separate task planning from allocation and scheduling
